package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.60

import (
	"context"
	"log"
	"errors"

	"github.com/skeetcha/pf2ql/graph/model"
)

func getProductLineFromInt(l int) model.ProductLine {
	return model.ProductLineRulebook
}

// FindSource is the resolver for the findSource field.
func (r *queryResolver) FindSource(ctx context.Context, id *string) (*model.Source, error) {
	rows, err := r.Db.Query("select * from sources where id=" + *id)

	if err != nil {
		log.Fatal(err)
		return nil, err
	}

	for rows.Next() {
		var id string
		var name string
		var releaseDate string
		var productLine int
		var link string
		var errataVersion *float64
		var errataLink *string
		var errataDate *string
		err = rows.Scan(&id, &name, &releaseDate, &productLine, &link, &errataVersion, &errataLink, &errataDate)

		if err != nil {
			log.Fatal(err)
			return nil, err
		}

		return &model.Source{ID: id, Name: name, ReleaseDate: releaseDate, ProductLine: getProductLineFromInt(productLine), Link: link, ErrataVersion: errataVersion, ErrataLink: errataLink, ErrataDate: errataDate}, nil
	}

	return nil, errors.New("couldn't find it")
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
